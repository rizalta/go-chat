package pages

import "go-chat/cmd/web/components"

var indexHandle = templ.NewOnceHandle()

templ Index() {
	@Base() {
		<main class="flex flex-col justify-start items-center w-full h-full">
			@components.Navbar()
			<div hx-ext="ws" ws-connect="/ws" class="w-3/5 h-5/6 bg-base-200 mt-6 flex flex-col items-center rounded-md">
				<h1 class="text-3xl mt-3 mb-2">Chatroom</h1>
				<div id="room" class="w-11/12 h-5/6 border-2 border-primary overflow-scroll flex flex-col-reverse rounded-md mb-2"></div>
				<form ws-send class="w-11/12 flex gap-2">
					<input
						type="text"
						name="message"
						class="input input-bordered input-primary bg-transparent w-11/12"
						placeholder="Type here"
					/>
					<button type="submit" class="btn btn-primary w-1/12">Send</button>
				</form>
			</div>
		</main>
	}
	@indexHandle.Once() {
		<script>
	function updateTimeAgo(givenTime) {
		const now = new Date();
		const diffInSeconds = Math.floor((now - givenTime) / 1000);

		if (diffInSeconds < 60) {
			return "just now";
		} else if (diffInSeconds < 3600) {
			return `${Math.floor(diffInSeconds / 60)} minutes ago`;
		} else if (diffInSeconds < 86400) {
			return `${Math.floor(diffInSeconds / 3600)} hours ago`;
		} else {
			return `${Math.floor(diffInSeconds / 86400)} days ago`;
		}
	}
	document.addEventListener("alpine:init", () => {
		Alpine.data("chat", (timestamp) => ({
			givenTime: new Date(timestamp),
			timeAgo: "",
			init() {
				this.timeAgo = updateTimeAgo(this.givenTime);
				setInterval(() => {
					this.timeAgo = updateTimeAgo(this.givenTime);
				}, 60 * 1000);
			},
		}))
	})
</script>
	}
}
